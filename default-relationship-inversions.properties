###############################################################################
####                         Relationship Inversions
###############################################################################
##
## Default relationship inversions supported by DataService.
##
## DataService performs relationship inversion in order to support filtering
## by non-filterable relationships (e.g. VPXD multi-cardinality relationships).
##
## For example, for a query which filters by 'HostSystem/vm', DataService
## would retrieve the value of the inverse relationship
## 'VirtualMachine/runtime/host' and then rewrite the original query to filter
## by the retrieved host keys.
##
## Rules for the content of the registry:
## - include relationships on aggregated models (to avoid redundant queries -
##   see below)
## - must include relationship aliases (in the current wiring the relationship
##   invertor acts before the alias module)
## - no need to include most custom relationships, because they are filterable
##   (the custom relationship module can use the relationship invertor to make
##   hops filterable)
##
## The relationship invertor needs to act before the aggregated models, in
## order to improve performance (i.e. avoid repeated queries) for use cases
## like this:
##
##   SELECT ...
##   FROM AnyNetwork
##   WHERE vm = vm-18
##
## If the relationship invertor acted on the child models instead of the
## aggregated model, the following auxiliary query would be repeated for all
## child models (i.e. Network, OpaqueNetwork, DistributedVirtualPortgroup):
##
##   SELECT network
##   FROM VirtualMachine
##   WHERE vm = vm-18
##
## Unfortunately this means that the relationship invertor cannot take
## advantage of the aggregated models module when publishing the schema.
## As a rule of thumb, if a relationship on a child model is declared
## invertible, the same relationship on the aggregated model has to be manually
## declared invertible.
##

AnyComputeResource/datastore=Datastore/cluster,Datastore/computeResource
AnyComputeResource/host=HostSystem/parent
AnyComputeResource/rp=AnyResourcePool/owner
AnyComputeResource/rps=ResourcePool/owner
AnyComputeResource/vapp=VirtualApp/owner
AnyDistributedVirtualSwitch/cluster=ClusterComputeResource/dvs
AnyDistributedVirtualSwitch/host=HostSystem/dvs
AnyDistributedVirtualSwitch/parentFolder=Folder/allDvs
AnyDistributedVirtualSwitch/portgroup=DistributedVirtualPortgroup/dvs
AnyDistributedVirtualSwitch/summary/hostMember=HostSystem/dvs
AnyDistributedVirtualSwitch/summary/vm=VirtualMachine/dvs
AnyDistributedVirtualSwitch/vm=VirtualMachine/dvs
AnyNetwork/cluster=ClusterComputeResource/network
AnyNetwork/host=HostSystem/network
AnyNetwork/vapp=VirtualApp/network
AnyNetwork/vm=VirtualMachine/network
AnyNetwork/parentFolder=Folder/allNetwork
AnyResourcePool/ancestorFolder=Folder/allRPs,Folder/allVApps
AnyResourcePool/ancestorRp=ResourcePool/descendantRp,ResourcePool/descendantVApp
AnyResourcePool/ancestorVApp=VirtualApp/descendantRp,VirtualApp/descendantVApp
AnyResourcePool/descendantRp=ResourcePool/ancestorRp,ResourcePool/ancestorVApp
AnyResourcePool/descendantVApp=VirtualApp/ancestorRp,VirtualApp/ancestorVApp
AnyResourcePool/descendantVm=VirtualMachine/ancestorRp
AnyResourcePool/resourcePool=AnyResourcePool/parent
AnyResourcePool/computeResourceDatastore=Datastore/resourcePool,Datastore/hostVapp
AnyResourcePool/datastore=Datastore/vapp
ClusterComputeResource/ancestorFolders=Folder/allClusters
ClusterComputeResource/datastore=Datastore/cluster
ClusterComputeResource/dvs=AnyDistributedVirtualSwitch/cluster
ClusterComputeResource/host=HostSystem/parent
ClusterComputeResource/vapp=VirtualApp/cluster
ClusterComputeResource/vm=VirtualMachine/cluster
ComputeResource/datastore=Datastore/computeResource
ComputeResource/host=HostSystem/parent
ComputeResource/vapp=VirtualApp/cr
Datacenter/cluster=ClusterComputeResource/dc
Datacenter/datastore=Datastore/dc
Datacenter/dcFolder=Folder/childrenDCs
Datacenter/folder=Folder/dc
Datacenter/host=HostSystem/dc
Datacenter/rp=ResourcePool/dc
Datacenter/storagePod=StoragePod/dc
Datacenter/vApp=VirtualApp/dc
Datacenter/vm=VirtualMachine/dc
Datastore/cluster=ClusterComputeResource/datastore
Datastore/hostKey=HostSystem/datastore
Datastore/parentFolder=Folder/allDs
Datastore/vapp=VirtualApp/datastore
Datastore/hostVapp=VirtualApp/computeResourceDatastore
Datastore/vm=VirtualMachine/datastore
DistributedVirtualPortgroup/host=HostSystem/dvpg
DistributedVirtualPortgroup/parentFolder=Folder/alldvpg
DistributedVirtualPortgroup/vm=VirtualMachine/network
DistributedVirtualSwitch/cluster=ClusterComputeResource/dvs
DistributedVirtualSwitch/host=HostSystem/dvs
DistributedVirtualSwitch/parentFolder=Folder/allDvs
DistributedVirtualSwitch/summary/hostMember=HostSystem/dvs
DistributedVirtualSwitch/summary/vm=VirtualMachine/dvs
DistributedVirtualSwitch/vm=VirtualMachine/dvs
Folder/allRPs=ResourcePool/ancestorFolder
Folder/allVApps=VirtualApp/ancestorFolder
Folder/allVms=VirtualMachine/folder
Folder/childEntity=Folder/parent,StoragePod/parent,AnyDistributedVirtualSwitch/parent,AnyNetwork/parent,VirtualApp/parentFolder,VirtualMachine/parent,Datacenter/parent,Datastore/parent,AnyComputeResource/parent
Folder/childrenDCs=Datacenter/dcFolder
Folder/host=HostSystem/folder
Folder/parentFolder=Folder/childFolder
HostNetwork/host=HostSystem/hostNetwork
HostNetwork/parentFolder=Folder/hostnetwork
HostNetwork/vm=VirtualMachine/hostNetwork
HostSystem/datastore=Datastore/hostKey
HostSystem/dvs=AnyDistributedVirtualSwitch/summary/hostMember
HostSystem/folder=Folder/host
HostSystem/network=AnyNetwork/host
HostSystem/rps=ResourcePool/allHosts
HostSystem/vapp=VirtualApp/host
HostSystem/vm=VirtualMachine/runtime/host
Network/vm=VirtualMachine/network
Network/host=HostSystem/standardnetwork
Network/parentFolder=Folder/allstandardnetwork
OpaqueNetwork/vm=VirtualMachine/network
OpaqueNetwork/host=HostSystem/opaquenetwork
OpaqueNetwork/parentFolder=Folder/opaquenetwork
ResourcePool/ancestorFolder=Folder/allRPs
ResourcePool/ancestorRp=ResourcePool/descendantRp
ResourcePool/ancestorVApp=VirtualApp/descendantRp
ResourcePool/computeResourceDatastore=Datastore/resourcePool
ResourcePool/descendantRp=ResourcePool/ancestorRp
ResourcePool/descendantVApp=VirtualApp/ancestorRp
ResourcePool/descendantVm=VirtualMachine/ancestorRp
StoragePod/childEntity=Datastore/parentStoragePod
StoragePod/datastore=Datastore/parentPod
StoragePod/parentFolder=Folder/allSpod
VirtualApp/ancestorFolder=Folder/allVApps
VirtualApp/ancestorRp=ResourcePool/descendantVApp
VirtualApp/ancestorVApp=VirtualApp/descendantVApp
VirtualApp/datastore=Datastore/vapp
VirtualApp/computeResourceDatastore=Datastore/hostVapp
VirtualApp/descendantRp=ResourcePool/ancestorVApp
VirtualApp/descendantVApp=VirtualApp/ancestorVApp
VirtualApp/descendantVm=VirtualMachine/ancestorVApp
VirtualApp/network=AnyNetwork/vapp
VirtualMachine/ancestorRp=AnyResourcePool/descendantVm
VirtualMachine/ancestorVApp=VirtualApp/descendantVm
VirtualMachine/datastore=Datastore/vm
VirtualMachine/dcFolder=Folder/dcFolderedVm
VirtualMachine/dvs=AnyDistributedVirtualSwitch/vm
VirtualMachine/folder=Folder/allVms
VirtualMachine/network=AnyNetwork/vm
VirtualMachine/vmFolder=Folder/vm
VirtualMachine/vmTemplateRps=ResourcePool/vmTemplates
VmwareDistributedVirtualSwitch/cluster=ClusterComputeResource/dvs
VmwareDistributedVirtualSwitch/host=HostSystem/dvs
VmwareDistributedVirtualSwitch/parentFolder=Folder/allDvs
VmwareDistributedVirtualSwitch/summary/hostMember=HostSystem/dvs
VmwareDistributedVirtualSwitch/summary/vm=VirtualMachine/dvs
VmwareDistributedVirtualSwitch/vm=VirtualMachine/dvs
